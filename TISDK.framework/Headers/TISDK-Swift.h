// Generated by Apple Swift version 4.2.1 effective-4.1.50 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TISDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_PROTOCOL("_TtP5TISDK16TITCSTagProtocol_")
@protocol TITCSTagProtocol
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@end


SWIFT_PROTOCOL("_TtP5TISDK24TITCSTagViewBaseDelegate_")
@protocol TITCSTagViewBaseDelegate
- (void)wantsBecomeFirstResponder;
- (void)didBecomeFirstResponder;
- (void)wantsResignFirstResponder;
- (void)didResignFirstResponder;
@end

@protocol TITCSTagViewSelectionDelegate;
@class UIColor;

SWIFT_PROTOCOL("_TtP5TISDK24TITCSTagViewBaseProtocol_")
@protocol TITCSTagViewBaseProtocol
@property (nonatomic, copy) NSString * _Nonnull displayDelimiter;
@property (nonatomic, weak) id <TITCSTagViewBaseDelegate> _Nullable delegate;
@property (nonatomic, weak) id <TITCSTagViewSelectionDelegate> _Nullable selectionDelegate;
@property (nonatomic, strong) UIColor * _Nullable displayDelimiterColor;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
@property (nonatomic, readonly) BOOL selected;
- (CGSize)sizeToFitWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) UIKeyboardAppearance keyboardAppearance;
@end

@class UIFont;
@class TITCSTagViewConfigurationSelectionAnimation;

SWIFT_CLASS("_TtC5TISDK25TITCSTagViewConfiguration")
@interface TITCSTagViewConfiguration : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TITCSTagViewConfiguration * _Nonnull commonConfiguration;)
+ (TITCSTagViewConfiguration * _Nonnull)commonConfiguration SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor selectedBackgroundColor:(UIColor * _Nonnull)selectedBackgroundColor textColor:(UIColor * _Nonnull)textColor selectedTextColor:(UIColor * _Nonnull)selectedTextColor textFont:(UIFont * _Nonnull)textFont textHorizontalPadding:(CGFloat)textHorizontalPadding textVerticalPadding:(CGFloat)textVerticalPadding shouldUseAutomaticCornerRadius:(BOOL)shouldUseAutomaticCornerRadius cornerRadius:(CGFloat)cornerRadius selectionAnimation:(TITCSTagViewConfigurationSelectionAnimation * _Nonnull)selectionAnimation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5TISDK43TITCSTagViewConfigurationSelectionAnimation")
@interface TITCSTagViewConfigurationSelectionAnimation : NSObject
- (nonnull instancetype)initWithIsAnimationEnabled:(BOOL)isAnimationEnabled animationDuration:(NSTimeInterval)animationDuration transformScale:(CGFloat)transformScale completionDuration:(NSTimeInterval)completionDuration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class UIView;

SWIFT_PROTOCOL("_TtP5TISDK22TITCSViewRepresentable_")
@protocol TITCSViewRepresentable
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@end


SWIFT_PROTOCOL("_TtP5TISDK20TITCSTagViewProtocol_")
@protocol TITCSTagViewProtocol <TITCSTagViewBaseProtocol, TITCSViewRepresentable, UIKeyInput>
@end


SWIFT_PROTOCOL("_TtP5TISDK29TITCSTagViewSelectionDelegate_")
@protocol TITCSTagViewSelectionDelegate
- (BOOL)shouldChangeSelectionOnFirstResponderChange SWIFT_WARN_UNUSED_RESULT;
@end

@protocol TITCSTagsViewDataSource;
@protocol TITCSTagsViewDelegate;
enum SelectionType : NSInteger;
@class NSCoder;

SWIFT_CLASS("_TtC5TISDK13TITCSTagsView")
@interface TITCSTagsView : UIScrollView
@property (nonatomic, weak) id <TITCSTagsViewDataSource> _Nullable dataSource;
@property (nonatomic, weak) id <TITCSTagsViewDelegate> _Nullable tagsViewDelegate;
@property (nonatomic) CGFloat maxHeight;
@property (nonatomic) CGFloat minHeight;
@property (nonatomic, strong) UIColor * _Nullable textFieldColor;
@property (nonatomic, strong) UIFont * _Nullable textFieldFont;
@property (nonatomic) CGFloat minimumTextFieldWidth;
@property (nonatomic) CGFloat textFieldAdditionalLeftSpace;
@property (nonatomic, copy) NSString * _Nonnull placeholder;
@property (nonatomic) BOOL placeholderAlwaysVisible;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull delimiters;
@property (nonatomic, copy) NSString * _Nonnull displayDelimiter;
@property (nonatomic, strong) UIColor * _Nullable displayDelimiterColor;
@property (nonatomic) UIEdgeInsets padding;
@property (nonatomic) CGFloat spaceBetweenTags;
@property (nonatomic) CGFloat verticalSpaceBetweenTags;
@property (nonatomic) BOOL readOnly;
@property (nonatomic) CGFloat maxContentHeight;
@property (nonatomic, strong) UIView * _Nullable accessoryView;
@property (nonatomic) UIEdgeInsets accessoryViewPadding;
@property (nonatomic) BOOL allowEqualTags;
@property (nonatomic) enum SelectionType selectionType;
@property (nonatomic) BOOL shouldDeleteOnDoubleSelection;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull selectedIndexes;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) BOOL isFirstResponder;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
/// Take the text inside of the field and make it a Tag.
- (void)acceptCurrentTextAsTag;
@property (nonatomic, readonly) BOOL isEditing;
- (void)beginEditing;
- (void)endEditing;
- (void)addTags:(NSArray<id <TITCSTagProtocol>> * _Nonnull)tags;
- (void)addTags:(NSArray<id <TITCSTagProtocol>> * _Nonnull)tags selectedIndexes:(NSArray<NSNumber *> * _Nonnull)selectedIndexes;
- (void)addTag:(id <TITCSTagProtocol> _Nonnull)tag;
- (void)removeTagWithText:(NSString * _Nonnull)text;
- (void)removeTagAtIndex:(NSInteger)index;
- (void)removeAllTags;
@end

typedef SWIFT_ENUM(NSInteger, SelectionType, closed) {
  SelectionTypeNoSelection = 0,
  SelectionTypeSingleSelection = 1,
  SelectionTypeMultipleSelection = 2,
};


@interface TITCSTagsView (SWIFT_EXTENSION(TISDK)) <TITCSTagViewSelectionDelegate>
- (BOOL)shouldChangeSelectionOnFirstResponderChange SWIFT_WARN_UNUSED_RESULT;
@end

@class UITextField;

@interface TITCSTagsView (SWIFT_EXTENSION(TISDK)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end




@interface TITCSTagsView (SWIFT_EXTENSION(TISDK))
@property (nonatomic) UIKeyboardType keyboardType;
@property (nonatomic) UIKeyboardAppearance keyboardAppearance;
@property (nonatomic) UIReturnKeyType returnKeyType;
@property (nonatomic) UITextSpellCheckingType spellCheckingType;
@property (nonatomic) UITextAutocapitalizationType autocapitalizationType;
@property (nonatomic) UITextAutocorrectionType autocorrectionType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, readonly, strong) UIView * _Nullable inputAccessoryView;
@property (nonatomic, strong) UIView * _Nullable inputFieldAccessoryView;
@end


SWIFT_PROTOCOL("_TtP5TISDK23TITCSTagsViewDataSource_")
@protocol TITCSTagsViewDataSource
- (id <TITCSTagProtocol> _Nonnull)createTagWithText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (id <TITCSTagViewProtocol> _Nonnull)createTagViewWithTag:(id <TITCSTagProtocol> _Nonnull)tag SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP5TISDK21TITCSTagsViewDelegate_")
@protocol TITCSTagsViewDelegate
@optional
/// Called when the text field ends editing.
- (void)didEndEditing:(TITCSTagsView * _Nonnull)tagsView;
/// Called when the text field begins editing.
- (void)didBeginEditing:(TITCSTagsView * _Nonnull)tagsView;
/// Called when the text field should return.
- (BOOL)onShouldReturn:(TITCSTagsView * _Nonnull)tagsView SWIFT_WARN_UNUSED_RESULT;
/// Called when the text field text has changed. You should update your autocompleting UI based on the text supplied.
- (void)didChangeText:(TITCSTagsView * _Nonnull)tagsView text:(NSString * _Nullable)text;
/// Called when a tag has been added. You should use this opportunity to update your local list of selected items.
- (void)didAddTag:(TITCSTagsView * _Nonnull)tagsView tag:(id <TITCSTagProtocol> _Nonnull)tag;
/// Called when a tag has been removed. You should use this opportunity to update your local list of selected items.
- (void)didRemoveTag:(TITCSTagsView * _Nonnull)tagsView tag:(id <TITCSTagProtocol> _Nonnull)tag;
/// Called when a tag has been selected.
- (void)didSelectTagView:(TITCSTagsView * _Nonnull)tagsView tagView:(id <TITCSTagViewProtocol> _Nonnull)tagView;
/// Called when a tag has been unselected.
- (void)didUnselectTagView:(TITCSTagsView * _Nonnull)tagsView tagView:(id <TITCSTagViewProtocol> _Nonnull)tagView;
/// Called when the user attempts to press the Return key with text partially typed.
/// @return false if the text shouldn’t be accepted, true otherwise.
- (BOOL)onVerifyTag:(TITCSTagsView * _Nonnull)tagsView text:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
/// Called when the view has updated its own height. If you are
/// not using Autolayout, you should use this method to update the
/// frames to make sure the tag view still fits.
- (void)didChangeHeightTo:(TITCSTagsView * _Nonnull)tagsView height:(CGFloat)height;
@end


SWIFT_CLASS("_TtC5TISDK12TITCSTextTag")
@interface TITCSTextTag : NSObject <TITCSTagProtocol>
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5TISDK16TITCSTextTagView")
@interface TITCSTextTagView : UIView
@property (nonatomic, weak) id <TITCSTagViewBaseDelegate> _Nullable delegate;
@property (nonatomic, weak) id <TITCSTagViewSelectionDelegate> _Nullable selectionDelegate;
@property (nonatomic, copy) NSString * _Nonnull displayDelimiter;
@property (nonatomic, strong) UIColor * _Nullable displayDelimiterColor;
@property (nonatomic) UIKeyboardAppearance keyboardAppearance;
@property (nonatomic, readonly) BOOL selected;
- (nonnull instancetype)initWithTag:(id <TITCSTagProtocol> _Nonnull)tag configuration:(TITCSTagViewConfiguration * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) CGRect frame;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface TITCSTextTagView (SWIFT_EXTENSION(TISDK)) <UIKeyInput>
@property (nonatomic, readonly) BOOL hasText;
- (void)insertText:(NSString * _Nonnull)text;
- (void)deleteBackward;
@end


@interface TITCSTextTagView (SWIFT_EXTENSION(TISDK)) <TITCSTagViewProtocol>
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (CGSize)sizeToFitWidth:(CGFloat)width SWIFT_WARN_UNUSED_RESULT;
@end


@interface TITCSTextTagView (SWIFT_EXTENSION(TISDK))
@property (nonatomic, readonly) BOOL canBecomeFirstResponder;
- (BOOL)becomeFirstResponder SWIFT_WARN_UNUSED_RESULT;
- (BOOL)resignFirstResponder SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) UITextAutocorrectionType autocorrectionType;
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
